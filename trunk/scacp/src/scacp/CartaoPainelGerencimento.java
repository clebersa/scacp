/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package scacp;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author cleber
 */
public class CartaoPainelGerencimento extends javax.swing.JPanel {
    Prova prova;
    /**
     * Creates new form CartaoPainelGerencimento
     */
    public CartaoPainelGerencimento(){}
    
    public CartaoPainelGerencimento(Prova prova) {
        this.prova = prova;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrpnlQuestoesCartao = new javax.swing.JScrollPane();
        painelInternoScroll = new javax.swing.JPanel();
        pnlBotoesCartao = new javax.swing.JPanel();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        btnCorrigirCartoes = new javax.swing.JButton();

        scrpnlQuestoesCartao.setMinimumSize(new java.awt.Dimension(100, 100));
        scrpnlQuestoesCartao.setPreferredSize(new java.awt.Dimension(400, 400));
        scrpnlQuestoesCartao.getHorizontalScrollBar().setUnitIncrement(10);
        scrpnlQuestoesCartao.getVerticalScrollBar().setUnitIncrement(10);

        painelInternoScroll.setAlignmentX(0.0F);
        painelInternoScroll.setAlignmentY(0.0F);
        painelInternoScroll.setPreferredSize(new java.awt.Dimension(100, 100));
        scrpnlQuestoesCartao.setViewportView(painelInternoScroll);

        pnlBotoesCartao.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções de Cartão"));

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        btnCorrigirCartoes.setText("Corrigir Cartões");
        btnCorrigirCartoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorrigirCartoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotoesCartaoLayout = new javax.swing.GroupLayout(pnlBotoesCartao);
        pnlBotoesCartao.setLayout(pnlBotoesCartaoLayout);
        pnlBotoesCartaoLayout.setHorizontalGroup(
            pnlBotoesCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesCartaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIncluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLocalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(btnCorrigirCartoes)
                .addContainerGap())
        );
        pnlBotoesCartaoLayout.setVerticalGroup(
            pnlBotoesCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotoesCartaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnIncluir)
                .addComponent(btnAlterar)
                .addComponent(btnExcluir)
                .addComponent(btnLocalizar)
                .addComponent(btnCorrigirCartoes))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrpnlQuestoesCartao, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addComponent(pnlBotoesCartao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrpnlQuestoesCartao, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotoesCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        int numeroInscricao;
        Cartao novoCartao = new Cartao();
        CartaoPainel cartaoPainel;
        if(salvarCartaoAtual()){
            try{
                numeroInscricao = Integer.parseInt(JOptionPane.showInputDialog(this, "Informe o número de inscrição do candidato:", "Número de Inscrição", JOptionPane.OK_OPTION));
                if(prova.getCartoes().isEmpty() && numeroInscricao != 9999990){
                    JOptionPane.showMessageDialog(this, "O primeiro cartão a ser informado deve ser o gabarito!", "Primeiro cartão!", JOptionPane.OK_CANCEL_OPTION);
                }else if(novoCartao.validarInscricao(numeroInscricao) || (prova.getCartoes().isEmpty() && numeroInscricao == 9999990)){
                    if(numeroInscricao == 0){
                        corrigirCartoes(evt);
                        super.removeAll();
                        JOptionPane.showMessageDialog(this, "Último cartão informado!", "Último cartão!", JOptionPane.OK_CANCEL_OPTION);
                        return;
                    }
                    novoCartao.setNumeroInscricao(numeroInscricao);
                    cartaoPainel = new CartaoPainel(novoCartao, prova.getQuantidadeQuestoes(), prova.getTipoProva());
                    cartaoPainel.setPreferredSize(new Dimension(cartaoPainel.getPreferredSize().width+30, cartaoPainel.getPreferredSize().height));
                    painelInternoScroll.removeAll();
                    painelInternoScroll.add(cartaoPainel);
                    painelInternoScroll.setPreferredSize(cartaoPainel.getPreferredSize());
                    painelInternoScroll.validate();
                    painelInternoScroll.repaint();
                    scrpnlQuestoesCartao.validate();
                    scrpnlQuestoesCartao.repaint();
                    
                    btnAlterar.setEnabled(true);
                }else{
                    JOptionPane.showMessageDialog(this, "Número de inscrição inválido!\nInforme um número válido!", "Inscrição Inválida", JOptionPane.ERROR_MESSAGE);
                }
            }catch(NumberFormatException excecao){
                JOptionPane.showMessageDialog(this, "Número de inscrição inválido!\nInforme um número válido!", "Inscrição Inválida", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int novoNumeroInscricao;
        Cartao cartao = new Cartao();
        try{
            novoNumeroInscricao = Integer.parseInt(JOptionPane.showInputDialog(this, "Informe o número correto de inscrição do candidato:", "Número de Inscrição", JOptionPane.OK_OPTION));
            if(cartao.validarInscricao(novoNumeroInscricao)){
                ((CartaoPainel) painelInternoScroll.getComponent(0)).getCartao().setNumeroInscricao(novoNumeroInscricao);
            }else{
                    JOptionPane.showMessageDialog(this, "Número de inscrição inválido!\nInforme um número válido!", "Inscrição Inválida", JOptionPane.ERROR_MESSAGE);
            }
        }catch(NumberFormatException excecao){
            JOptionPane.showMessageDialog(this, "Número de inscrição inválido!\nInforme um número válido!", "Inscrição Inválida", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        btnAlterar.setEnabled(false);
        try{
            prova.getCartoes().remove(((CartaoPainel) painelInternoScroll.getComponent(0)).getCartao().getNumeroInscricao());
        }catch(ArrayIndexOutOfBoundsException exception){
            JOptionPane.showMessageDialog(this, "Nenhum cartão para remover!", "Atenção!", JOptionPane.YES_NO_CANCEL_OPTION);
        }
        painelInternoScroll.removeAll();
        painelInternoScroll.validate();
        painelInternoScroll.repaint();
        painelInternoScroll.setEnabled(true);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        Cartao novoCartao = new Cartao();
        CartaoPainel cartaoPainel;
        
        CartaoLocalizar localizadorCartao = new CartaoLocalizar(null, true, prova.getCartoes(), novoCartao);
        localizadorCartao.pack();
        localizadorCartao.setVisible(true);
        if(novoCartao.getNumeroInscricao() != 0){
            if(salvarCartaoAtual()){
                cartaoPainel = new CartaoPainel(novoCartao, prova.getQuantidadeQuestoes(), prova.getTipoProva());
                cartaoPainel.setPreferredSize(new Dimension(cartaoPainel.getPreferredSize().width, cartaoPainel.getPreferredSize().height));
                painelInternoScroll.removeAll();
                painelInternoScroll.add(cartaoPainel);
                painelInternoScroll.setPreferredSize(cartaoPainel.getPreferredSize());
                painelInternoScroll.validate();
                painelInternoScroll.repaint();
                scrpnlQuestoesCartao.validate();
                scrpnlQuestoesCartao.repaint();
                
                btnAlterar.setEnabled(false);
            }
        }
        
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnCorrigirCartoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorrigirCartoesActionPerformed
        if(salvarCartaoAtual()){
            if(!prova.getCartoes().isEmpty()){
                prova.corrigirCartoes();
                JOptionPane.showMessageDialog(this, "Todos os cartões da prova \'" +prova.getNome()+ "\' foram corrigidos com sucesso.", "Cartões corrigidos", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "A prova não contém nenhum cartão!", "Sem cartões", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnCorrigirCartoesActionPerformed

    public boolean salvarCartaoAtual(){
        Cartao cartaoAtual;
        if(painelInternoScroll.getComponentCount() != 0){
            cartaoAtual = ((CartaoPainel) painelInternoScroll.getComponent(0)).getCartao();
            
            switch(JOptionPane.showConfirmDialog(this, "Deseja salvar o cartão ("+((CartaoPainel) painelInternoScroll.getComponent(0)).getCartao().getNumeroInscricao() +")?", "Excluir cartão", JOptionPane.INFORMATION_MESSAGE)){
                case 0: // "Ok" option
                    String questoesFaltando = "";
                    for(int contador = 0; contador< cartaoAtual.getMarcacao().length(); contador++){
                        if(cartaoAtual.getMarcacao().charAt(contador) == '0'){
                            questoesFaltando += String.format("%d, ", (contador+1));
                        }
                    }
                    if(questoesFaltando.isEmpty()){
                        prova.getCartoes().put(cartaoAtual.getNumeroInscricao(), cartaoAtual);
                        return true;
                    }else{
                        questoesFaltando = questoesFaltando.substring(0, questoesFaltando.length()-2)+".";
                        JOptionPane.showMessageDialog(this, "Alguma(s) questão(ões) não tiveram a resposta informada!\nInforme a resposta da(s) questão(ões): "+questoesFaltando, "Questão(ões) faltando", JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                case 1: // "No" option
                    excluirCartao(null);
                    return true;
                case 2: // "Cancel" option
                    return false;
                default:
                    return false;
            }
        }else{
            return true;
        }
    }
    
    public void incluirCartao(ActionEvent evt){
        btnIncluirActionPerformed(evt);
    }
    
    public void excluirCartao(ActionEvent evt){
        btnExcluirActionPerformed(evt);
    }
    
    public void alterarCartao(ActionEvent evt){
        btnAlterarActionPerformed(evt);
    }
    
    public void localizarCartao(ActionEvent evt){
        btnLocalizarActionPerformed(evt);
    }
    
    public void corrigirCartoes(ActionEvent evt){
        btnCorrigirCartoesActionPerformed(evt);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCorrigirCartoes;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JPanel painelInternoScroll;
    private javax.swing.JPanel pnlBotoesCartao;
    private javax.swing.JScrollPane scrpnlQuestoesCartao;
    // End of variables declaration//GEN-END:variables
}
